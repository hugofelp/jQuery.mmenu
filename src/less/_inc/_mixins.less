//	Arrows
.mm_arrow
{
	content: '';
	border: 2px solid transparent;
	display: inline-block;
	width: 8px;
	height: 8px;
	margin: auto;
	position: absolute;
	top: 0;
	bottom: 0;

	.mm_webkit_prefix( "transform", rotate( -45deg ) );
}
.mm_arrow_prev
{
	border-right: none;
	border-bottom: none;
	left: @mm_listitemIndent;
}
.mm_arrow_next
{
	border-top: none;
	border-left: none;
	right: @mm_listitemIndent;
}


//	Borders
.mm_border( @border, @pseudo, @pos1, @pos2, @pos3 )
{
	&:@{pseudo}
	{
		content: '';
		border-@{border}-width: 1px;
		border-@{border}-style: solid;
		display: block;
		position: absolute;
		@{pos1}: 0;
		@{pos2}: 0;
		@{pos3}: 0;
	}
}
.mm_border_top
{
	.mm_border( "top", "before", "left", "right", "top" );
}
.mm_border_right
{
	.mm_border( "right", "after", "top", "bottom", "right" );
}
.mm_border_bottom
{
	.mm_border( "bottom", "after", "left", "right", "bottom" );
}
.mm_border_left
{
	.mm_border( "left", "before", "top", "bottom", "left" );
}

.mm_navbar_positioning( @pos, @nr )
{
	.mm-navbar-@{pos}-@{nr}
	{
		@{pos}: @mm_navbarHeight * ( @nr - 1 );
	}

	.mm-hasnavbar-@{pos}-@{nr}
	{
		.mm-panel
		{
			@{pos}: @mm_navbarHeight * @nr;
		}
		.mm-indexer
		{
			@{pos}: @mm_padding + ( @mm_navbarHeight * @nr );
		}
        
        .if-top() when (@pos = 'top') {
        	@{pos}: @mm_navbarHeight * @nr;
        }
		.mm-fixeddivider
		{
			.if-top();
		}
	}
}
.mm_navbar_sizing( @nr )
{
	.mm-navbar-size-@{nr}
	{
		height: @mm_navbarHeight * @nr;
	}
}
.mm_navbar_content( @nr )
{
	.mm-navbar-content-@{nr} > *
	{
		width: round( 100% / @nr * 100 ) / 100;
	}
}


//	Iconpanels
.mm_iconpanel_positioning( @nr )
{
	.mm-iconpanel .mm-panel.mm-iconpanel-@{nr}
	{
		left: @mm_iconpanelWidth * @nr;
	}
}


//	Misc
.mm_vendor_prefix( @prop, @val )
{
	-webkit-@{prop}: @val;
	-moz-@{prop}: @val;
	-ms-@{prop}: @val;
	-o-@{prop}: @val;
	@{prop}: @val;
}
.mm_webkit_prefix( @prop, @val )
{
//	we're not yet ready to drop vendor prefixes due to IE9 and older versions of FF
	.mm_vendor_prefix( @prop, @val );
//	-webkit-@{prop}: @val;
//	@{prop}: @val;
}
.mm_ellipsis()
{
	text-overflow: ellipsis;
	white-space: nowrap;
	overflow: hidden;
}
.mm_clearfix()
{
	&:after
	{
		content: '';
		display: block;
		clear: both;
	}
}